import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { Form, Button } from 'react-bootstrap'
import React from 'react'
import { getEnglishWord, addWord, Result, getNumberOfWords } from '../library/api/querys'
import NavbarComponent from '../componets/navbar'

const Home: NextPage = () => {
	const [searchedWord, setSearchedWord] = React.useState<string>("")
	const [translatedWord, setTranslatedWord] = React.useState<Result | null>(null)
    const [numberOfWords, setNumberOfWords] = React.useState<number | null>(null)

    const translateInput = React.useRef<HTMLInputElement | null>()

    React.useEffect(() => {
        getNumberOfWords()
            .then(number => setNumberOfWords(number))
    }, [])

	const translateWord = async (): Promise<void> => {
		let result = await getEnglishWord(searchedWord)

		setTranslatedWord(result)
	}

    const saveWord = async (): Promise<void> => {
        if (translatedWord?.englishWord && translatedWord.spanishWord) {
            addWord(translatedWord?.englishWord, translatedWord?.spanishWord)
                .then(() => {
                    if (numberOfWords) {
                        setNumberOfWords(numberOfWords + 1)
                    }

                    setTranslatedWord(null)
                    setSearchedWord("")

                    if (translateInput.current) {
                        translateInput.current.focus()
                    }
                })
        }
    }

    const NumberOfWordsElement = () => {
        return numberOfWords ?
            <div style={localStyles.numberOfWords}>There are {numberOfWords} words in the database!</div>
            :
            null
    }

	const TranslatedWordElement = () => {
		return translatedWord ?
			<div>
                <div>{translatedWord.englishWord}</div>
                {
                    translatedWord.existsInDB == false ?
                        <Button onClick={saveWord}>Save word</Button>
                        :
                        null
                }
            </div>
			:
			null
	}

	return (
		<>
			<Head>
				<title>Translate</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/translation.png" />
			</Head>

            <NavbarComponent />

			<main style={localStyles.mainElement}>
                <NumberOfWordsElement />

				<Form onSubmit={
                    ev => {
                        ev.preventDefault()
                        translateWord()
                    } 
                }>
					<Form.Group className="mb-3" controlId="formBasicEmail">
						<Form.Control 
							type="text" 
							placeholder="Translate word" 
							value={searchedWord}
                            ref={translateInput}
							onChange={ev => setSearchedWord(ev.target.value)}
							autoFocus
						/>
					</Form.Group>

					<Button variant="primary" type="submit">Translate</Button>

					<TranslatedWordElement />
				</Form>
			</main>
		</>
	)
}

const localStyles = {
    numberOfWords: {
        'marginBottom': "20px"
    },

    mainElement: {
        marginTop: "20px",
        paddingLeft: "20px",
        paddingRight: "20px"
    }
}

export default Home
