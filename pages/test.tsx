import React from "react"
import Head from 'next/head'
import { NextPage } from "next"
import { getRandomWord, QueryResult, TranslationResult } from '../library/api/querys'
import { Form, Button } from 'react-bootstrap'
import NavbarComponent from "../componets/navbar"
import LanguageSelector, { Languages } from '../componets/languageSelector'

const getLanguageToTranslate = (originLanguage: Languages) => {
    switch (originLanguage) {
        case Languages.English:
            return "spanish"
    
        case Languages.Spanish:
            return "english"
    }
}

const Test: NextPage = () => {
    const [randomWord, setRandomWord] = React.useState<QueryResult | null>(null)
    const [answer, setAnswer] = React.useState<string>("")
    const [solved, setSolved] = React.useState<boolean>(false)
    const [language, setLanguage] = React.useState<Languages>(Languages.Spanish)

    const translateInput = React.useRef<HTMLInputElement | null>()
    const focusInput = () => translateInput.current.focus()

    React.useEffect(() => {
        getRandomWord("es")
            .then(result => setRandomWord(result))
    }, [])

    React.useEffect(() => {
        getNewWord()
    }, [language])

    const getAllTranslations = (): string => {
        let translations = ""

        for (const translation of randomWord?.translations) {
            translations += ` ${translation.displayTarget}, `
        }

        return translations
    }

    const Solution = () => {
        if (solved && randomWord) {
            if (checkIfAnswerIsCorrect()) {
                return (
                    <>
                        <div>Congratulations your answer is correct!</div>
                        <div>All the possible answers are {getAllTranslations()}</div>
                    </>
                )
            }

            return <div>Your answer is wrong, the correct translations are {getAllTranslations()}</div>
        }
    }

    const checkIfAnswerIsCorrect = (): boolean => {
        for (const translation of randomWord?.translations) {
            if (translation.displayTarget.toLowerCase() == answer.toLowerCase()) {
                return true
            }
        }

        return false
    }

    const getNewWord = () => {
        getRandomWord(language)
            .then(result => {
                setRandomWord(result)
                setSolved(false)
                setAnswer("")

                focusInput()
            })
    }

    return (
        <>
            <Head>
                <title>Words test</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/translation.png" />
            </Head>

            <NavbarComponent />

            <main style={localStyles.mainElement}>
                <LanguageSelector 
                    setLanguage={setLanguage} 
                    focusInput={focusInput}
                />

                <div style={localStyles.question}>
                    How is {randomWord?.displaySource} spelled in {getLanguageToTranslate(language)}?
                </div>

                <Form onSubmit={
                    ev => {
                        ev.preventDefault()
                        setSolved(true)
                    }
                }>
                    <Form.Control
                        type="text"
                        placeholder="Guess word"
                        value={answer}
                        ref={translateInput}
                        onChange={ev => setAnswer(ev.target.value)}
                        autoComplete="off"
                        autoFocus
                    />

                    <Solution />

                    <div style={localStyles.buttons}>
                        <Button
                            variant="primary"
                            type="submit"
                            style={localStyles.checkAnswerButton}
                        >Check answer</Button>
                        <Button variant="primary" type="button" onClick={getNewWord}>Get new word</Button>
                    </div>
                </Form>
            </main>
        </>
    )
}

const localStyles = {
    checkAnswerButton: {
        marginRight: "20px"
    },

    buttons: {
        marginTop: "10px"
    },

    mainElement: {
        marginTop: "20px",
        paddingLeft: "20px",
        paddingRight: "20px"
    },

    question: {
        marginTop: "10px",
        marginBottom: "10px"
    }
}

export default Test